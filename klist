[1mdiff --git a/shaders/main.comp b/shaders/main.comp[m
[1mindex d2b6832..6ca04e7 100644[m
[1m--- a/shaders/main.comp[m
[1m+++ b/shaders/main.comp[m
[36m@@ -348,6 +348,7 @@[m [muint rayMarch(in Ray ray)[m
 	uint childmasks[MASK_LIST_SIZE];[m
 	uint lastmasks[MASK_LIST_SIZE];[m
 	uvec3 masklists[MAX_NUM_LAYERS];[m
[32m+[m	[32m//uvec3 masklists[MASK_LIST_SIZE];[m
 	uint masklist_indices[MAX_NUM_LAYERS];[m
 [m
 	uvec3 node_mids[MAX_NUM_LAYERS];[m
[36m@@ -362,7 +363,13 @@[m [muint rayMarch(in Ray ray)[m
 	vec3 s_min = (vec3(node_min) - E) * v_reciprocal;[m
 	vec3 s_max = (vec3(node_max) - E) * v_reciprocal;[m
 	s_mids[0] = (vec3(node_mids[0]) - E) * v_reciprocal;[m
[31m-	masklists[0] = generateMasklist(s_mids[0]);[m
[32m+[m
[32m+[m	[32m//masklists[0] = generateMasklist(s_mids[0]);[m
[32m+[m	[32muint last_mask_index, mask_index = 0;[m
[32m+[m	[32mint last_mask_bitfield_offset, mask_bitfield_offset = 0;[m
[32m+[m	[32muint last_childmask, childmask;[m
[32m+[m	[32muint last_lastmask, lastmask;[m
[32m+[m	[32mmasklists[mask_index] = bitfieldInsert(masklists[mask_index], generateMasklist(s_mids[0]), mask_bitfield_offset, 3);[m
 [m
 	vec3 s_lower;[m
 	s_lower.x = ((vmask & 1u) == 0) ? s_min.x : s_max.x;[m
[36m@@ -376,10 +383,6 @@[m [muint rayMarch(in Ray ray)[m
 	s_l_maxes[0] = max(max(s_lower.x, s_lower.y), s_lower.z);[m
 	s_u_mins[0] = min(min(s_upper.x, s_upper.y), s_upper.z);[m
 [m
[31m-	uint last_mask_index, mask_index = 0;[m
[31m-	int last_mask_bitfield_offset, mask_bitfield_offset = 0;[m
[31m-	uint last_childmask, childmask;[m
[31m-	uint last_lastmask, lastmask;[m
 	childmask = 0u;[m
 	childmask |= (s_mids[0].x < s_l_maxes[0]) ? 1u : 0u;[m
 	childmask |= (s_mids[0].y < s_l_maxes[0]) ? 2u : 0u;[m
[36m@@ -412,6 +415,8 @@[m [muint rayMarch(in Ray ray)[m
 		last_mask_bitfield_offset = 3*int((idx-1) - (last_mask_index * num_masks_per_element));[m
 		last_childmask = bitfieldExtract(childmasks[last_mask_index], last_mask_bitfield_offset, 3);[m
 		last_lastmask = bitfieldExtract(lastmasks[last_mask_index], last_mask_bitfield_offset, 3);[m
[32m+[m		[32muvec3 masklist = bitfieldExtract(masklists[mask_index], mask_bitfield_offset, 3);[m
[32m+[m		[32muvec3 last_masklist = bitfieldExtract(masklists[last_mask_index], last_mask_bitfield_offset, 3);[m
 [m
 		uint this_child_index = last_childmask ^ vmask;[m
 [m
[36m@@ -433,7 +438,8 @@[m [muint rayMarch(in Ray ray)[m
 			s_min = (vec3(node_min) - E) * v_reciprocal;[m
 			s_max = (vec3(node_max) - E) * v_reciprocal;[m
 			s_mids[idx] = (vec3(node_mids[idx]) - E) * v_reciprocal;[m
[31m-			masklists[idx] = generateMasklist(s_mids[idx]);[m
[32m+[m			[32m//masklists[idx] = generateMasklist(s_mids[idx]);[m
[32m+[m			[32mmasklists[mask_index] = bitfieldInsert(masklists[mask_index], generateMasklist(s_mids[idx]), mask_bitfield_offset, 3);[m
 [m
 			for (uint j = 0; j < 3; j++)[m
 			{[m
[36m@@ -481,7 +487,8 @@[m [muint rayMarch(in Ray ray)[m
 				}[m
 [m
 				bool continue_main_loop = false;[m
[31m-				while ((masklists[idx-1][masklist_indices[idx-1]] & last_childmask) != 0u)[m
[32m+[m				[32m//while ((masklists[idx-1][masklist_indices[idx-1]] & last_childmask) != 0u)[m
[32m+[m				[32mwhile ((last_masklist[masklist_indices[idx-1]] & last_childmask) != 0u)[m
 				{[m
 					if (masklist_indices[idx-1] == 2)[m
 					{[m
[36m@@ -496,7 +503,7 @@[m [muint rayMarch(in Ray ray)[m
 				if (continue_main_loop) continue;[m
 				// now re-generate childmask[m
 				//childmasks[idx-1] |= masklists[idx-1][masklist_indices[idx-1]];[m
[31m-				childmasks[last_mask_index] = bitfieldInsert(childmasks[last_mask_index], last_childmask | masklists[idx-1][masklist_indices[idx-1]], last_mask_bitfield_offset, 3);[m
[32m+[m				[32mchildmasks[last_mask_index] = bitfieldInsert(childmasks[last_mask_index], last_childmask | last_masklist[masklist_indices[idx-1]], last_mask_bitfield_offset, 3);[m
 				entered_new_node = true;[m
 				continue;[m
 			}[m
[36m@@ -521,7 +528,8 @@[m [muint rayMarch(in Ray ray)[m
 [m
 			// if air and not the last node to be searched within its parent, find the next sister node[m
 			bool continue_main_loop = false;[m
[31m-			while ((masklists[idx-1][masklist_indices[idx-1]] & last_childmask) != 0u)[m
[32m+[m			[32m//while ((masklists[idx-1][masklist_indices[idx-1]] & last_childmask) != 0u)[m
[32m+[m			[32mwhile ((last_masklist[masklist_indices[idx-1]] & last_childmask) != 0u)[m
 			{[m
 				if (masklist_indices[idx-1] == 2)[m
 				{[m
[36m@@ -536,7 +544,7 @@[m [muint rayMarch(in Ray ray)[m
 			if (continue_main_loop) continue;[m
 			// now re-generate childmask[m
 			//childmasks[idx-1] |= masklists[idx-1][masklist_indices[idx-1]];[m
[31m-			childmasks[last_mask_index] = bitfieldInsert(childmasks[last_mask_index], last_childmask | masklists[idx-1][masklist_indices[idx-1]], last_mask_bitfield_offset, 3);[m
[32m+[m			[32mchildmasks[last_mask_index] = bitfieldInsert(childmasks[last_mask_index], last_childmask | last_masklist[masklist_indices[idx-1]], last_mask_bitfield_offset, 3);[m
 			entered_new_node = true;[m
 			continue;[m
 		}[m
[36m@@ -563,7 +571,7 @@[m [muint rayMarch(in Ray ray)[m
 [m
 		// the node we just finished searching was not the last hit node within its parent - find the next hit sister node.[m
 		bool continue_main_loop = false;[m
[31m-		while ((masklists[idx-1][masklist_indices[idx-1]] & last_childmask) != 0u)[m
[32m+[m		[32mwhile ((last_masklist[masklist_indices[idx-1]] & last_childmask) != 0u)[m
 		{[m
 			if (masklist_indices[idx-1] == 2)[m
 			{[m
[36m@@ -578,7 +586,7 @@[m [muint rayMarch(in Ray ray)[m
 		if (continue_main_loop) continue;[m
 		// now re-generate childmask[m
 		//childmasks[idx-1] |= masklists[idx-1][masklist_indices[idx-1]];[m
[31m-		childmasks[last_mask_index] = bitfieldInsert(childmasks[last_mask_index], last_childmask | masklists[idx-1][masklist_indices[idx-1]], last_mask_bitfield_offset, 3);[m
[32m+[m		[32mchildmasks[last_mask_index] = bitfieldInsert(childmasks[last_mask_index], last_childmask | last_masklist[masklist_indices[idx-1]], last_mask_bitfield_offset, 3);[m
 		entered_new_node = true;[m
 	}[m
 [m
